{"version":3,"sources":["store/assets/img/yellow.png","store/assets/img/green.png","store/assets/img/blue.png","store/assets/img/red.png","store/assets/img/orange.png","store/actions/index.js","store/utils/api.js","store/utils/url.js","store/constants/ActionsTypes.js","component/ImageComponent.jsx","component/ModalContent.jsx","component/ResultComponent.jsx","component/QuestionComponent.jsx","container/HomeContainer/HomeCtn.jsx","App.js","serviceWorker.js","store/reducers/demo.js","store/reducers/index.js","index.js"],"names":["module","exports","actFetchListQuestionRequest","dispatch","actFetchListQuestionStart","axios","method","url","data","body","catch","err","console","log","then","res","actFetchListQuestionSuccess","type","actFetchListImageRequest","actFetchListImageStart","actFetchListImageSuccess","ImageComponent","props","handleConfirmImage","indexImages","className","style","textAlign","strokeColor","from","to","percent","parseFloat","toFixed","status","caption","alt","src","image_desktop","onClick","danger","borderColor","Extraversion","Openness","Agreeableness","Conscientiousness","EmotionalStability","background","image","Yellow","Blue","Green","Orange","Red","dataTest","ModalContent","visible","typeContent","closeModal","title","width","onCancel","footer","color","padding","map","item","index","marginBottom","marginLeft","blockResult","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","options","cutoutPercentage","rotation","Math","PI","circumference","animation","animateRotate","ResultComponent","useState","typeGause","visibleModal","state","setState","_handleChangeState","key","value","prevState","_handleClickChartElm","dataEvent","blockResultData","_index","display","cursor","height","onElementsClick","elements","dataSource","renderItem","Item","overflow","margin","Group","Radio","QuestionComponent","handleSubmit","indexQuestions","_handleSubmit","a","active","spinner","text","flexDirection","justifyContent","alignItems","question","indexOf","slice","name","onChange","e","target","choices","choice","disabled","stepEnum","connect","demo","loading","listQuestion","listQuestions","listImages","getListQuestions","getListImages","useEffect","localStorage","setItem","rs","strAnswer","App","Boolean","window","location","hostname","match","initialState","action","slides","appReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.14e49884.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yellow.ac4b5bfb.png\";","module.exports = __webpack_public_path__ + \"static/media/green.b955840b.png\";","module.exports = __webpack_public_path__ + \"static/media/blue.68a4fc0a.png\";","module.exports = __webpack_public_path__ + \"static/media/red.df7762ee.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.2a83e095.png\";","import * as Types from './../constants/ActionsTypes';\r\nimport {callApiOpenEd, callApiTraitify} from './../utils/api';\r\n\r\nexport const actFetchListQuestionRequest = () => {\r\n    return dispatch => {\r\n        dispatch(actFetchListQuestionStart());\r\n        return callApiOpenEd().then(res => {\r\n                return dispatch(actFetchListQuestionSuccess(res.data));\r\n        })\r\n    }\r\n}\r\n\r\nexport const actFetchListQuestionStart = () => {\r\n    return {\r\n        type: Types.FETCH_LIST_QUESTIONS_START\r\n    }\r\n}\r\n\r\nexport const actFetchListQuestionSuccess = (data) => {\r\n    return {\r\n        type: Types.FETCH_LIST_QUESTIONS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nexport const actFetchListImageRequest = () => {\r\n    return dispatch => {\r\n        dispatch(actFetchListImageStart());\r\n        return callApiTraitify().then(res => {\r\n            return dispatch(actFetchListImageSuccess(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const actFetchListImageStart = () => {\r\n    return {\r\n        type: Types.FETCH_LIST_IMAGES_START\r\n    }\r\n}\r\n\r\nexport const actFetchListImageSuccess = (data) => {\r\n    return {\r\n        type: Types.FETCH_LIST_IMAGES_SUCCESS,\r\n        data\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport {urlOpenEd, urlTratify} from './url';\r\n\r\nexport function callApiOpenEd( endpoint, method, body ) {\r\n    return axios({\r\n        method: method ? method : \"GET\",\r\n        url: `${urlOpenEd}`,\r\n        data: body ? body : \"\",\r\n    }).catch( err => {\r\n        console.log(err);\r\n    });\r\n}\r\nexport function callApiTraitify( endpoint, method, body ) {\r\n    return axios({\r\n        method: method ? method : \"GET\",\r\n        url: `${urlTratify}`,\r\n        data: body ? body : \"\",\r\n    }).catch( err => {\r\n        console.log(err);\r\n    });\r\n}","export const urlOpenEd = \"https://private-amnesiac-2cc49-hn00.apiary-proxy.com/questions\";\r\nexport const urlTratify = \"https://app.traitify.com/traitify-js/assessments/537557b6-7bd3-4643-943d-a70e1e178eac?data=archetype,blend,instructions,slides,types,traits&locale_key=en-us\";","export const FETCH_LIST_QUESTIONS_START = 'FETCH_LIST_QUESTIONS_START';\r\nexport const FETCH_LIST_QUESTIONS_SUCCESS = 'FETCH_LIST_QUESTIONS_SUCCESS';\r\nexport const FETCH_LIST_IMAGES_START = 'FETCH_LIST_IMAGES_START';\r\nexport const FETCH_LIST_IMAGES_SUCCESS = 'FETCH_LIST_IMAGES_SUCCESS';","import React from 'react';\r\nimport { Button, Progress } from 'antd';\r\n\r\n\r\nexport const ImageComponent = props => {\r\n    const {data, handleConfirmImage, indexImages} = props;\r\n    return (\r\n        <div className=\"img\">\r\n            <h4 className=\"my-4\" style={{textAlign:'center'}}>\r\n                    Images based asseememts\r\n            </h4>\r\n            <Progress\r\n                strokeColor={{\r\n                  from: '#108ee9',\r\n                  to: '#87d068',\r\n                }}\r\n                percent={parseFloat(indexImages/55*100).toFixed(2)}\r\n                status=\"active\"\r\n            />\r\n            <div className=\"img-header\">\r\n                <span className=\"img-header-color\"/>\r\n                <p className=\"img-header-title\">{data && data.caption}</p>\r\n            </div> \r\n            <img className=\"img-content\" alt=\"\" src={ data && data.image_desktop}/>  \r\n            <div className=\"img-btn\">\r\n                <div className=\"img-btn-relative\">\r\n                    <Button type=\"primary\" className=\"img-btn-relative-btn\" onClick={() => handleConfirmImage('me')}>Me</Button>\r\n                    <Button type=\"primary\" danger className=\"img-btn-relative-btn\" onClick={() => handleConfirmImage('notMe')}>Not Me</Button>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Modal} from 'antd';\r\n\r\n// Image\r\nimport Yellow from'./../store/assets/img/yellow.png';\r\nimport Green from'./../store/assets/img/green.png';\r\nimport Blue from'./../store/assets/img/blue.png';\r\nimport Red from'./../store/assets/img/red.png';\r\nimport Orange from'./../store/assets/img/orange.png';\r\n\r\nconst borderColor = {\r\n    Extraversion : \"rgb(255, 204, 59)\",\r\n    Openness : \"rgb(66, 176, 219)\",\r\n    Agreeableness : \"rgb(41, 183, 112)\",\r\n    Conscientiousness : \"rgb(249, 139, 28)\",\r\n    EmotionalStability : \"rgb(239, 97, 94)\"\r\n}\r\n\r\nconst background = {\r\n    Extraversion : \"rgb(255, 204, 59,0.5)\",\r\n    Openness : \"rgb(66, 176, 219,0.5)\",\r\n    Agreeableness : \"rgb(41, 183, 112,0.5)\",\r\n    Conscientiousness : \"rgb(249, 139, 28,0.5)\",\r\n    EmotionalStability : \"rgb(239, 97, 94,0.5)\"\r\n}\r\n\r\nconst image = {\r\n    Extraversion : Yellow,\r\n    Openness : Blue,\r\n    Agreeableness : Green,\r\n    Conscientiousness : Orange,\r\n    EmotionalStability : Red\r\n}\r\n\r\nconst dataTest = ['Approachable', 'Energetic', 'Fast to act', 'Fun loving', 'Intense']\r\nexport const ModalContent = (props) => {\r\n    const { visible, typeContent, closeModal } = props;\r\n    return(\r\n        <Modal\r\n            visible={visible}\r\n            title={\"Detail Content\"}\r\n            width=\"60%\"\r\n            onCancel={closeModal}\r\n            footer={null}\r\n        >\r\n            <div \r\n                className=\"rs-content\"\r\n                style={{\r\n                    borderColor: borderColor[typeContent]\r\n                }}\r\n            >\r\n                <div className=\"rs-content-header\">\r\n                    <div className=\"rs-content-header-icon\">\r\n                        <img src={image[typeContent]} alt=\"\" className=\"rs-content-header-icon-img\"/>\r\n                    </div>\r\n                    <div className=\"rs-content-header-letter\">\r\n                        <h2 className=\"rs-content-header-letter-title\">\r\n                            {typeContent} \r\n                            <span style={{ color: borderColor[typeContent], padding: '0px 5px'}}>|</span>\r\n                            High\r\n                        </h2>\r\n                        <p className=\"rs-content-header-letter-text\">\r\n                            The candidate seems to be the sort of person who seeks out and enjoys being with other people. Typically, they find it stimulating to have lively discussions with others, and may even enjoy getting a reaction by saying or doing entertaining things. As such they are a 'do-think-do' kind of person who has plenty of enthusiasm and stamina, and a real thirst for getting out there and making their mark.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rs-content-list\">\r\n                    <h4 className=\"rs-content-list-letter\">\r\n                        Potential Benefits\r\n                    </h4>\r\n                    <ul className=\"rs-content-list-menu\">\r\n                        {dataTest.map((item, index) => {\r\n                            return(<li className=\"rs-content-list-menu-item\" style={{background: background[typeContent], marginBottom: '20px', marginLeft: `${(index + 1) % 4 !== 1 ? '2%': 0}`}}>\r\n                                {item}\r\n                            </li>)\r\n                        })}                       \r\n                    </ul>\r\n                </div>\r\n                <div className=\"rs-content-list\">\r\n                    <h4 className=\"rs-content-list-letter\">\r\n                        Room for Growth and Change\r\n                    </h4>\r\n                    <ul className=\"rs-content-list-menu\">\r\n                        {dataTest.map((item, index) => {\r\n                            return(<li className=\"rs-content-list-menu-item\" style={{background: background[typeContent], marginBottom: '20px', marginLeft: `${(index + 1) % 4 !== 1 ? '2%': 0}`}}>\r\n                                {item}\r\n                            </li>)\r\n                        })}                       \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport {List} from 'antd';\r\n\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\n// Component\r\nimport { ModalContent } from './ModalContent'\r\n\r\nconst blockResult = {\r\n    Extraversion : \"Extraversion\",\r\n    Openness : \"Openness\",\r\n    Agreeableness : \"Agreeableness\",\r\n    Conscientiousness : \"Conscientiousness\",\r\n    EmotionalStability : \"EmotionalStability\"\r\n}\r\n\r\nconst data = {\r\n    type: 'doughnut',\r\n\tlabels: [\r\n\t\t'Extraversion',\r\n\t\t'Openness',\r\n\t\t'Agreeableness',\r\n\t\t'Conscientiousness',\r\n\t\t'Emotional Stability',\r\n    ],\r\n\tdatasets: [{\r\n\t\tdata: [10,5,20,15,10],\r\n\t\tbackgroundColor: [\r\n        \"rgb(255, 204, 59)\",\r\n\t\t\"rgb(66, 176, 219)\",\r\n        \"rgb(41, 183, 112)\",\r\n        \"rgb(249, 139, 28)\",\r\n        \"rgb(239, 97, 94)\"\r\n\t\t],\r\n\t\thoverBackgroundColor: [\r\n        \"rgb(255, 204, 59,0.5)\",\r\n\t\t'rgb(66, 176, 219,0.5)',\r\n        'rgb(41, 183, 112,0.5)',\r\n        'rgb(249, 139, 28,0.5)',\r\n        'rgb(239, 97, 94,0.5)'\r\n        ],\r\n        borderWidth: 1,\r\n        \r\n    }],\r\n    options: {\r\n        cutoutPercentage: 50,\r\n        rotation: -0.5 * Math.PI,\r\n        circumference: 1 * Math.PI,\r\n        animation: {\r\n            animateRotate: false\r\n        }\r\n        \r\n    }\r\n};\r\nconst dataTest = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];\r\n\r\nexport const ResultComponent = props => {\r\n    const [state, setState] = useState({\r\n        blockResult: \"Extraversion\",\r\n        typeGause: 'LEARNING GAUGE',\r\n        visibleModal: false,\r\n    });\r\n\r\n    const _handleChangeState = (key, value) => {\r\n        setState( prevState => ({\r\n            ...prevState,\r\n            [key] : value,\r\n        }));\r\n    }\r\n    const _handleClickChartElm = (dataEvent) => {\r\n        if (dataEvent) {\r\n            const index = dataEvent._index;\r\n            let blockResultData;\r\n            switch(index) {\r\n                case 0: \r\n                    blockResultData = blockResult.Extraversion;\r\n                    break;\r\n                case 1: \r\n                    blockResultData = blockResult.Openness;\r\n                    break;\r\n                case 2:\r\n                    blockResultData = blockResult.Agreeableness;\r\n                    break;\r\n                case 3:\r\n                    blockResultData = blockResult.Conscientiousness;\r\n                    break;\r\n                case 4:\r\n                    blockResultData = blockResult.EmotionalStability;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                visibleModal: true,\r\n                blockResult: blockResultData\r\n            }))\r\n        }        \r\n    }\r\n    return (\r\n        <div className=\"rs\">\r\n            <h4 className=\"my-4\" style={{textAlign:'center'}}>\r\n                Result\r\n            </h4>\r\n            {/* <ul className=\"rs-header\">\r\n                <li \r\n                    style={{ \r\n                        borderRadius: \"4px 0 0 0\", \r\n                        cursor: 'pointer', \r\n                        backgroundColor: 'rgba(255, 204, 59, 0.1)' \r\n                    }} \r\n                    onClick={() => _handleChangeState('blockResult', 'Extraversion')}\r\n                    className=\"rs-header-item\"\r\n                >\r\n                    <div \r\n                        className=\"rs-header-item-around\" \r\n                        style={{ \r\n                            backgroundColor: 'rgba(255, 204, 59, 0.1)',\r\n                            borderColor: borderColor.Extraversion \r\n                        }}\r\n                    >\r\n                        <div className=\"rs-header-item-around-content\">\r\n                            <img src={Yellow} alt=\"\" className=\"rs-header-item-around-content-img\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li \r\n                    style={{ \r\n                        borderRadius: \"0 4px 0 0\", \r\n                        cursor: 'pointer', \r\n                        backgroundColor: 'rgba(66, 176, 219, 0.1)' \r\n                    }} \r\n                    onClick={() => _handleChangeState('blockResult', 'Openness')}\r\n                    className=\"rs-header-item\"\r\n                >\r\n                    <div \r\n                        className=\"rs-header-item-around\" \r\n                        style={{\r\n                            backgroundColor: 'rgba(66, 176, 219, 0.1)',\r\n                            borderColor: borderColor.Openness\r\n                        }}\r\n                    >\r\n                        <div className=\"rs-header-item-around-content\">\r\n                            <img src={Blue} alt=\"\" className=\"rs-header-item-around-content-img\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li \r\n                    style={{ \r\n                        borderRadius: \"0 4px 0 0\", \r\n                        cursor: 'pointer', \r\n                        backgroundColor: 'rgba(41, 183, 112, 0.1)' \r\n                    }} \r\n                    onClick={() => _handleChangeState('blockResult', 'Agreeableness')}\r\n                    className=\"rs-header-item\"\r\n                >\r\n                    <div \r\n                        className=\"rs-header-item-around\" \r\n                        style={{\r\n                            backgroundColor: 'rgba(41, 183, 112, 0.1)',\r\n                            borderColor: borderColor.Agreeableness\r\n                        }}\r\n                    >\r\n                        <div className=\"rs-header-item-around-content\">\r\n                            <img src={Green} alt=\"\" className=\"rs-header-item-around-content-img\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li \r\n                    style={{ \r\n                        borderRadius: \"0 4px 0 0\", \r\n                        cursor: 'pointer', \r\n                        backgroundColor: 'rgba(249, 139, 28, 0.1)',\r\n                        \r\n                    }} \r\n                    onClick={() => _handleChangeState('blockResult', 'Conscientiousness')}\r\n                    className=\"rs-header-item\"\r\n                >\r\n                    <div \r\n                        className=\"rs-header-item-around\" \r\n                        style={{\r\n                            backgroundColor: 'rgba(249, 139, 28, 0.1)',\r\n                            borderColor: borderColor.Conscientiousness \r\n                        }}\r\n                    >\r\n                        <div className=\"rs-header-item-around-content\">\r\n                            <img src={Orange} alt=\"\" className=\"rs-header-item-around-content-img\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li \r\n                    style={{ \r\n                        borderRadius: \"0 4px 0 0\", \r\n                        cursor: 'pointer', \r\n                        backgroundColor: 'rgba(239, 97, 94, 0.1)' \r\n                    }} \r\n                    onClick={() => _handleChangeState('blockResult', 'EmotionalStability')}\r\n                    className=\"rs-header-item\"\r\n                >\r\n                    <div \r\n                        className=\"rs-header-item-around\" \r\n                        style={{\r\n                            backgroundColor: 'rgba(239, 97, 94, 0.1)',\r\n                            borderColor: borderColor.EmotionalStability \r\n                        }}\r\n                    >\r\n                        <div className=\"rs-header-item-around-content\">\r\n                            <img src={Red} alt=\"\" className=\"rs-header-item-around-content-img\"/>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul> */}\r\n            <div style={{width:'25%', display:'inline-block', textAlign:'center', cursor: 'pointer'}} onClick={()=>_handleChangeState('typeGause', 'LEARNING GAUSE')}>\r\n                <h6>LEARNING GAUGE</h6>\r\n                <p>Reflect the manner in which a person learns best</p>\r\n                <hr style={{height:1, width:'80%'}}/>\r\n                <Doughnut data={data} onElementsClick={elements => _handleClickChartElm(elements[0])} width={200}/>\r\n            </div>\r\n            <div style={{width:'25%', display:'inline-block', textAlign:'center', cursor: 'pointer'}} onClick={()=>_handleChangeState('typeGause', 'PERSONALITY GAUSE')}>\r\n                <h6>PERSONALITY GAUSE</h6>\r\n                <p>Gives the user an accurate description of who they are.</p>\r\n                <hr style={{height:1, width:'80%'}}/>\r\n                <Doughnut data={data} onElementsClick={elements => _handleClickChartElm(elements[0])} width={200}/>\r\n            </div>\r\n            <div style={{width:'25%', display:'inline-block', textAlign:'center', cursor: 'pointer'}} onClick={()=>_handleChangeState('typeGause', 'SKILLS GAUSE')}>\r\n                <h6 >SKILLS GAUGE</h6>\r\n                <p>Indentifies the main skill sets for education and job readiness</p>\r\n                <hr style={{height:1, width:'80%'}}/>\r\n                <Doughnut data={data} onElementsClick={elements => _handleClickChartElm(elements[0])} width={200}/>\r\n            </div>\r\n            <div style={{width:'25%', display:'inline-block', textAlign:'center', cursor: 'pointer'}} onClick={()=>_handleChangeState('typeGause', 'CARRER GAUSE')}>\r\n                <h6 >CARRER GAUSE</h6>\r\n                <p>Indicates the aptitude each person has for a particular career.</p>\r\n                <hr style={{height:1, width:'80%'}}/>\r\n                <Doughnut data={data} onElementsClick={elements => _handleClickChartElm(elements[0])} width={200}/>\r\n            </div>\r\n            \r\n            <ModalContent\r\n                visible = {state.visibleModal}\r\n                typeContent = {state.blockResult}\r\n                closeModal = {() => _handleChangeState('visibleModal', false)}\r\n            />\r\n            <List\r\n                dataSource={dataTest}\r\n                renderItem={item => (\r\n                    <List.Item key={item}>\r\n                        {`${state.typeGause} ${item}`}\r\n                    </List.Item>\r\n                )}\r\n                style={{width: 300, height:200, overflow: 'auto', margin:'5rem auto'}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { Radio, Button, Progress } from 'antd';\r\n\r\nconst {Group} = Radio;\r\n\r\nexport const QuestionComponent = props => {\r\n    const {data, handleSubmit, indexQuestions} = props;\r\n    console.log(indexQuestions)\r\n    const [state, setState] = useState({\r\n        value: '', \r\n    })\r\n\r\n    const _onChangeValue =  value => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            value,\r\n        }))\r\n    }\r\n    \r\n    const _handleSubmit = async () => {\r\n        await handleSubmit(state.value);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            value: '',\r\n        }))\r\n    }\r\n    return(\r\n        <LoadingOverlay\r\n            active={false}\r\n            spinner\r\n            text='Loading your content...'\r\n        >\r\n            <div className=\"container-fluid my-5\" style={{textAlign:'center', display:'flex', flexDirection: 'column', justifyContent:'center', alignItems: 'center', width: 900}}>\r\n                <h4 className=\"my-4\">\r\n                    Skills Asseememts\r\n                </h4>\r\n                <Progress\r\n                    strokeColor={{\r\n                      from: '#108ee9',\r\n                      to: '#87d068',\r\n                    }}\r\n                    percent={parseFloat(indexQuestions/19*100).toFixed(2)}\r\n                    status=\"active\"\r\n                />\r\n                {data && (\r\n                <>\r\n                    <h5 className=\"my-4\">\r\n                        Question: {\" \"}{data.question.indexOf('https') !== -1  ? (\r\n                            <>\r\n                                {data.question.slice(0, data.question.indexOf('https'))}\r\n                                <img alt=\"\" src={data.question.slice(data.question.indexOf('https'))} style={{width: 200, height: 'auto', display: 'block', margin: '20px auto'}} />\r\n                            </>) \r\n                            : data.question}\r\n                    </h5>\r\n                    <Group className=\"my-4\" name=\"radiogroup\" onChange={(e) => _onChangeValue(e.target.value)} style={{display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems: 'flex-start'}}>\r\n                        {data.choices.map((item, index) => {\r\n                            return(\r\n                                <Radio value={item.choice + item.url} key={index + item.url} className='my-2'>\r\n                                    {item.choice.indexOf('https') !== -1 ? \r\n                                    <img alt=\"\" src={item.choice} style={{width: 30, height: 'auto', display: 'inline-block', margin: '30px auto'}} />\r\n                                    : item.choice}\r\n                                </Radio>\r\n                            )\r\n                        })}\r\n                        \r\n                    </Group>\r\n                </>\r\n                )}\r\n                <Button type=\"primary\" disabled= {state.value === ''} onClick={() => _handleSubmit()} className=\"img-btn-relative-btn mt-4\">Next</Button>\r\n            </div>\r\n        </LoadingOverlay>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport {callApiOpenEd} from './../../store/utils/api'\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { actFetchListQuestionRequest, actFetchListImageRequest, } from './../../store/actions/index';\r\n\r\n//Component\r\nimport { ImageComponent } from '../../component/ImageComponent'\r\nimport { ResultComponent } from '../../component/ResultComponent';\r\nimport { QuestionComponent } from '../../component/QuestionComponent';\r\n\r\nconst stepEnum = {\r\n    Image : 'Image',\r\n    Questions : 'Questions',\r\n    Result: 'Result'\r\n}\r\n\r\nconst HomeCtn = (props) => {\r\n    const {getListQuestions, listQuestion, loading, getListImages, listImages} = props;\r\n    const [state, setState] = useState({\r\n        question: {},\r\n        indexImages: 0,\r\n        indexQuestions: 0,\r\n        stepEnum: 'Image'\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getListImages();\r\n        getListQuestions();\r\n    },[])\r\n\r\n    const _handleSubmit = (rs) => {\r\n        let strAnswer = rs.slice(0,rs.indexOf(\"/\"));\r\n        const indexQuestions = ++state.indexQuestions;\r\n        localStorage.setItem(listQuestion && listQuestion[state.indexQuestions].question, strAnswer);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            indexQuestions,\r\n            stepEnum: indexQuestions === 19 ? 'Result' : state.stepEnum\r\n        }))\r\n    }\r\n\r\n    const _handleConfirmImage = (type) => {\r\n        const indexImages = ++state.indexImages;\r\n        localStorage.setItem(props && listImages[state.indexImages].caption, type);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            indexImages,\r\n            stepEnum: indexImages === 55 ? 'Questions' : state.stepEnum\r\n        }))\r\n    }\r\n    return(\r\n        <LoadingOverlay\r\n            active={loading}\r\n            spinner\r\n            text='Loading your content...'\r\n        >\r\n            <div className=\"container-fluid\">\r\n                <h1 style={{textAlign:'center'}}>\r\n                    NuuEDScore™ Sample\r\n                </h1>\r\n                <div style={{display: state.stepEnum === stepEnum.Image ? 'block' : 'none'}}>\r\n                    <ImageComponent handleConfirmImage={_handleConfirmImage} data={listImages && listImages[state.indexImages]} indexImages = {state.indexImages}/>\r\n                </div>\r\n                <div style={{display: state.stepEnum === stepEnum.Questions ? 'block' : 'none'}}>\r\n                    <QuestionComponent handleSubmit = {_handleSubmit} data={listQuestion && listQuestion[state.indexQuestions]} indexQuestions= {state.indexQuestions} />\r\n                </div>\r\n                <div style={{display: state.stepEnum === stepEnum.Result ? 'block' : 'none'}}>\r\n                    <ResultComponent/>\r\n                </div>                \r\n            </div>\r\n        </LoadingOverlay>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const {demo} = state;\r\n    return {\r\n        loading: demo.loading,\r\n        listQuestion: demo.listQuestions,\r\n        listImages: demo.listImages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getListQuestions : () => {\r\n            dispatch(actFetchListQuestionRequest());\r\n        },\r\n        getListImages : () => {\r\n            dispatch(actFetchListImageRequest());\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (HomeCtn);","import React from 'react';\r\nimport HomeCtn from './container/HomeContainer/HomeCtn';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <HomeCtn/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as Types from '../constants/ActionsTypes';\r\n\r\nvar initialState = [];\r\n\r\nconst demo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.FETCH_LIST_QUESTIONS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case Types.FETCH_LIST_QUESTIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listQuestions: action.data,\r\n                loading: false\r\n            }\r\n\r\n        case Types.FETCH_LIST_IMAGES_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case Types.FETCH_LIST_IMAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listImages: action.data.slides,\r\n                loading: false\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default demo;","import { combineReducers } from 'redux';\r\nimport demo from './demo';\r\nconst appReducers = combineReducers({\r\n    demo,\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"./store/assets/scss/style.scss\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport appReducers from './store/reducers/index';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  appReducers,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}